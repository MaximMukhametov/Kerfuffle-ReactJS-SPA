{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","status","setStatus","editMod","setEditMod","useEffect","activateEditMode","updateStatus","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","ProfileInfo","profile","className","classes","descriptionBlock","src","photos","large","Posts","item","alt","messages","likesCount","maxLength10","maxLengthCreator","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","fieldCreator","Textarea","validate","required","placeholder","MyPosts","memo","postElemetns","posts","map","p","key","id","message","postsBlock","textOfPost","addPostActionCreator","Post","prevMovie","nextMovie","console","log","MyPostsContainer","profilePage","newPostText","Profile","ProfileContainer","toggleIsFetching","userId","match","params","Promise","all","getUserProfile","getStatus","then","response","isFetching","compose","withRouter","usersPage","authorizedUserId"],"mappings":"yKAOIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAgBRE,IAbiB,SAACC,GAAe,IAEtCC,EAFqC,iLAInC,OAAKC,KAAKC,MAAMN,OACT,gBAACG,EAAcE,KAAKC,OADI,gBAAC,IAAD,CAAUC,GAAG,eAJT,GAEXC,aAQhC,OADiCC,YAAQX,EAARW,CAAoCL,K,oBCnBzEM,EAAOC,QAAU,CAAC,SAAW,8BAA8B,iBAAmB,wC,oBCA9ED,EAAOC,QAAU,CAAC,KAAO,sB,oBCAzBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,WAAa,4BAA4B,MAAQ,yB,+HC2C5HC,EA1CgB,SAACN,GAAW,IAAD,EACZO,mBAASP,EAAMQ,QADH,mBACjCA,EADiC,KACzBC,EADyB,OAEVF,oBAAS,GAFC,mBAEjCG,EAFiC,KAExBC,EAFwB,KAStCC,qBAAU,WACNH,EAAUT,EAAMQ,UACjB,CAACR,EAAMQ,SAEV,IAAMK,EAAmB,WAErBF,GAAYD,GACZV,EAAMc,aAAaN,IAMvB,OACI,8BACME,GACF,6BACI,0BAAMK,QAASF,GAAmBb,EAAMQ,QAAU,sBAIrDE,GACD,6BACI,2BAAOM,SAbI,SAACC,GACpBR,EAAUQ,EAAEC,cAAcC,QAYeC,WAAW,EAAMC,OAAQR,EACnDM,MAAOX,OCbfc,EAjBK,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,QAAQf,EAAyB,EAAzBA,OAAOM,EAAkB,EAAlBA,aAEjC,OAAKS,EAIG,6BACI,yBAAKC,UAAWC,IAAQC,kBACpB,yBAAKC,IAAKJ,EAAQK,OAAOC,QACzB,kBAAC,EAAD,CAAwBrB,OAAQA,EAAQM,aAAcA,MAN3D,mD,0BCKAgB,EAVD,SAAC9B,GACX,OACI,yBAAKwB,UAAWC,IAAQM,MACpB,yBAAKC,IAAI,MACJL,IAAI,+GACR3B,EAAMiC,SAHX,IAGsBjC,EAAMkC,a,2CCD9BC,EAAcC,YAAiB,IAkB/BC,EAAmBC,YAAU,CAC/BC,KAAM,eADeD,EAhBL,SAACtC,GAOjB,OACI,0BAAMwC,SAAUxC,EAAMyC,cACXC,YAAa,OAAO,OAAQC,IAAS,CAACC,SAAS,CAACC,IAAUV,GAAaW,YAAY,aAC1F,4CAsCGC,EA5BC7C,IAAM8C,MAAK,SAAAhD,GACvB,IAAIiD,EAAejD,EAAMkD,MAAMC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAOC,IAAKD,EAAEE,GAAIrB,SAAUmB,EAAEG,QAASrB,WAAYkB,EAAElB,gBAM7F,OACI,yBAAKV,UAAWC,IAAQ+B,YAAxB,SAEI,6BACI,wCAEJ,6BACI,kBAACnB,EAAD,CAAkBG,SAXhB,SAACiB,GACXzD,EAAM0D,qBAAqBD,EAAWE,UAYlC,yBAAKnC,UAAWC,IAAQyB,OACnBD,OAKd,SAA4BW,EAAWC,GAEtC,OADAC,QAAQC,IAAI,uBAAwBH,EAAWC,GACxCD,IAAcC,GACdD,IAAcC,K,QCvCVG,EAFU7D,aARH,SAACV,GACnB,MAAO,CACHyD,MAAOzD,EAAMwE,YAAYf,MACzBgB,YAAazE,EAAMwE,YAAYC,eAKS,CAACR,0BAAxBvD,CAA+C4C,GCGzDoB,EAXC,SAACnE,GACb,OACI,6BACI,oCACI,kBAAC,EAAD,CAAauB,QAASvB,EAAMuB,QAASf,OAAQR,EAAMQ,OAAQM,aAAcd,EAAMc,eAC/E,kBAAC,EAAD,S,gCCDVsD,E,4LACmB,IAAD,OAChBrE,KAAKC,MAAMqE,kBAAiB,GAC5B,IAAIC,EAASvE,KAAKC,MAAMuE,MAAMC,OAAOF,OAChCA,IACDA,EAAS,MAGbG,QAAQC,IAAI,CAAC3E,KAAKC,MAAM2E,eAAeL,GAASvE,KAAKC,MAAM4E,UAAUN,KAAUO,MAAK,SAAAC,GAChF,EAAK9E,MAAMqE,kBAAiB,Q,+BAQhC,OACI,6BAEI,kBAAC,EAAD,iBAAatE,KAAKC,MAAlB,CACSuB,QAASxB,KAAKC,MAAMuB,QACpBwD,WAAYhF,KAAKC,MAAM+E,WACvBvE,OAAQT,KAAKC,MAAMQ,OACnBM,aAAcf,KAAKC,MAAMc,qB,GAxBnBZ,IAAML,WAiCTD,YAAiBwE,GA0B9BY,sBACXC,IACArF,IACAO,aA3BkB,SAACV,GACnB,MAAQ,CACJ8B,QAAS9B,EAAMwE,YAAY1C,QAC3BwD,WAAYtF,EAAMyF,UAAUH,WAC5BvE,OAAQf,EAAMwE,YAAYzD,OAC1B2E,iBAAkB1F,EAAME,KAAK2E,OAC7B5E,OAAQD,EAAME,KAAKD,UAsBnB,CAAC2E,qBAAkBM,mBAAgBC,cAAW9D,mBAJvCkE,CAKbZ","file":"static/js/3.dcb10f43.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// HOC (хок) компонента, что-то типа декоратора в питоне, добавляет одинаковую функциональность к компонентам,\r\n// принимает компоненту, добавляет что-то и возвращает компоненту\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n};\r\n\r\nexport default WithAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panorama\":\"ProfileInfo_panorama__WMt1P\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__262oR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__1mEr7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__6ySMF\",\"panorama\":\"MyPosts_panorama__2gYXg\",\"postsBlock\":\"MyPosts_postsBlock__1YXJ_\",\"posts\":\"MyPosts_posts__27T7_\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [status, setStatus] = useState(props.status);\r\n    let [editMod, setEditMod] = useState(false);\r\n\r\n    // в одно строку это записывается так, но ниже развёрнутый вариант\r\n    // let stateWithSetState = useState(true); // создаёт масив, useState это хук для создания/работы с локальным стейтом\r\n    // let editMod = stateWithSetState[0]; // первым элементом массива является значение которое мы передали в функцию useState (initialState:false)\r\n    // let setEditMod = stateWithSetState[1]; // вторым элементом лежит функция которая устанавливает/меняет это значение\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        // setState метод из роительского класса React.Component, и он асинхронен, поэтому выполняется какое-то время\r\n        setEditMod(!editMod);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n    return (\r\n        <div>\r\n            {!editMod &&\r\n            <div>\r\n                <span onClick={activateEditMode}>{props.status || \"...loading status\"}</span>\r\n            </div>\r\n            }\r\n\r\n            {editMod &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={activateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <div>...loading status</div>\r\n    } else {\r\n        return (\r\n            <div>\r\n                <div className={classes.descriptionBlock}>\r\n                    <img src={profile.photos.large}/>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport classes from './Posts.module.css';\r\n\r\nconst Posts = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img alt='sdf'\r\n                 src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR_WYzaA1BQvvu0FN7Zu1MsxawEDpzFdG7uczm3cp8_kPigMMFO'></img>\r\n            {props.messages} {props.likesCount}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Posts","import React from \"react\";\r\nimport Posts from \"./Post/Posts\";\r\nimport classes from './MyPosts.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {fieldCreator, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPostsForm = (props) => {\r\n\r\n    // всё что передаётся в тэг Field в качестве параметров,\r\n    // уходит в компоненту component={Textarea} ,\r\n    // туда некоторые параметры попадают в полё input(такие как name, value  и т.д.),\r\n    // так же туда попадают параметры Meta, и все остальные парааметры просто передаются\r\n    // как обычные пропсы(например placeholder и lalalala={'lalalala'})\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                  {fieldCreator(\"Post\",\"text\", Textarea,{validate:[required, maxLength10],placeholder:\"New Post\"})}\r\n            <button>send</button>\r\n        </form>\r\n    )\r\n};\r\n\r\n// название только с большой буквы\r\nconst MyPostsReduxForm = reduxForm({\r\n    form: 'MyPostsForm'\r\n})(MyPostsForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postElemetns = props.posts.map(p => <Posts key={p.id} messages={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let addPost = (textOfPost) => {\r\n        props.addPostActionCreator(textOfPost.Post)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            mypost\r\n            <div>\r\n                <h3>My post</h3>\r\n            </div>\r\n            <div>\r\n                <MyPostsReduxForm onSubmit={addPost}/>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postElemetns}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}, function moviePropsAreEqual(prevMovie, nextMovie) {\r\n    console.log('prevMovie, nextMovie', prevMovie, nextMovie);\r\n    return prevMovie === nextMovie\r\n        && prevMovie === nextMovie;\r\n});\r\n\r\nexport default MyPosts","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateProps, {addPostActionCreator})(MyPosts);\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <>\r\n                <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n                <MyPostsContainer/>\r\n            </>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile_reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {toggleIsFetching} from \"../../redux/users_reducer\";\r\nimport WithAuthRedirect from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 7799\r\n        }\r\n\r\n        Promise.all([this.props.getUserProfile(userId), this.props.getStatus(userId)]).then(response => {\r\n            this.props.toggleIsFetching(false)\r\n        })\r\n        // this.props.getUserProfile(userId)\r\n        // this.props.getStatus(userId)\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         isFetching={this.props.isFetching}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// HOC (хок) компонента, что-то типа декоратора в питоне, добавляет одинаковую функциональность к компонентам,\r\n// принимает компоненту, добавляет что-то и возвращает компоненту\r\nlet AuthRedirectComponent = WithAuthRedirect(ProfileContainer);\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.usersPage.isFetching,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n\r\n    })\r\n};\r\n\r\n\r\n// withRouter нужен для того чтобы достать url-параметры (и не только)\r\n// из урла и запихать их в пропс (см. дебаг что приходит в пропс)\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);   <--- старый код\r\n\r\n// connect принимает функцию которая принимает стейт и возвращает то что нам нужно,\r\n// вторым параметром принимает функции акшн-криейторы, которые диспатчит и оотдаёт\r\n// пропсам в виде колбэка, затем мы в отдельных скобках вызываем функцию конект с\r\n// параметром - контейнерная компонента, чтобы запихать в неё получившиеся пропсы\r\n// с параметрами и колбэками\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps,\r\n        {toggleIsFetching, getUserProfile, getStatus, updateStatus})\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}