{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","userId","userName","message","createdAt","photos","writtenBy","to","className","classes","dialogs","user","userimg","src","small","small_img","userPhoto","user_name","message_body","slice","length","Dialogs","props","useEffect","getAllUsersWithDialogsThunk","getUserPhoto","dialog","messagedata","written_by","id","authUserId","written_for","dialogsPreview","map","d","name","convertUTCDateToLocalDate","created_at","compose","connect","state","messagesPage","messagesWithUser","auth","WithAuthRedirect"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,KAAO,yBAAyB,UAAY,8BAA8B,QAAU,4BAA4B,aAAe,mC,uGC6BxKC,EAzBI,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,OAAQC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UAG/D,OACI,kBAAC,IAAD,CAAMC,GAAI,YAAcN,EAAQO,UAAWC,IAAQC,SAE/C,yBAAKF,UAAWC,IAAQE,MACpB,yBAAKH,UAAWC,IAAQG,QACnBC,IAAKR,EAAOS,OAAST,EAAOU,WAAaC,MAC9C,uBAAGR,UAAWC,IAAQQ,WAAYf,IAGtC,yBAAKM,UAAWC,IAAQS,cACpB,yBACIL,IAAKP,EAAUD,OAAOS,OAASR,EAAUD,OAAOU,WAC7CC,MACP,6BAAMb,EAAQgB,MAAM,EAfD,IAgBdhB,EAAQiB,OAhBM,IAgB6B,QAGpD,yBAAKZ,UAAWC,IAAQL,WAAYA,K,SCEjCiB,EAtBC,SAACC,GACbC,qBAAU,WACND,EAAME,gCACP,IAEH,IAAMC,EAAe,SAACC,GAAD,OAAaA,EAAOC,YAAYC,WAAWC,KAAOP,EAAMQ,WACzEJ,EAAOC,YAAYI,YAAY1B,OAASqB,EAAOC,YAAYC,WAAWvB,QAEtEqB,EAASJ,EAAMU,eAAeC,KAC9B,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYjC,OAAQiC,EAAEL,GACV3B,SAAUgC,EAAEC,KACZhC,QAAS+B,EAAEP,YAAYxB,QACvBE,OAAQoB,EAAaS,GACrB5B,UAAW4B,EAAEP,YAAYC,WACzBxB,UAAWgC,YACPF,EAAEP,YAAYU,iBAEvC,OAAO,6BACFX,I,iCCRMY,sBACXC,aATgB,SAACC,GACjB,MAAO,CACHR,eAAgBQ,EAAMC,aAAaT,eACnCU,iBAAkBF,EAAMC,aAAaC,iBACrCZ,WAAYU,EAAMG,KAAK1C,UAKJ,CAACuB,kCACxBoB,IAFWN,CAGbjB","file":"static/js/4.36c2759a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__3q1Ak\",\"user\":\"DialogItem_user__HCzzf\",\"user_name\":\"DialogItem_user_name__2oHw-\",\"userimg\":\"DialogItem_userimg__1pCx1\",\"message_body\":\"DialogItem_message_body__3cgZs\"};","import React from \"react\";\r\nimport classes from './DialogItem.module.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport userPhoto from \"../../../media/userPhoto.jpg\"\r\n\r\nconst DialogItem = ({userId, userName, message, createdAt, photos, writtenBy}) => {\r\n    const maxMessageLengthToShow = 60;\r\n\r\n    return (\r\n        <Link to={\"/dialogs/\" + userId} className={classes.dialogs}>\r\n\r\n            <div className={classes.user}>\r\n                <img className={classes.userimg}\r\n                     src={photos.small || photos.small_img || userPhoto}/>\r\n                <p className={classes.user_name}>{userName}</p>\r\n            </div>\r\n\r\n            <div className={classes.message_body}>\r\n                <img\r\n                    src={writtenBy.photos.small || writtenBy.photos.small_img\r\n                    || userPhoto}/>\r\n                <div>{message.slice(0, maxMessageLengthToShow)}\r\n                    {message.length > maxMessageLengthToShow && '...'}</div>\r\n            </div>\r\n\r\n            <div className={classes.createdAt}>{createdAt}</div>\r\n        </Link>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React, {useEffect} from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport convertUTCDateToLocalDate from \"../../utils/convertUTCDateToLocalDate\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    useEffect(() => {\r\n        props.getAllUsersWithDialogsThunk()\r\n    }, []);\r\n\r\n    const getUserPhoto = (dialog) => (dialog.messagedata.written_by.id === props.authUserId ?\r\n        dialog.messagedata.written_for.photos : dialog.messagedata.written_by.photos);\r\n\r\n    let dialog = props.dialogsPreview.map(\r\n        d => <DialogItem userId={d.id}\r\n                         userName={d.name}\r\n                         message={d.messagedata.message}\r\n                         photos={getUserPhoto(d)}\r\n                         writtenBy={d.messagedata.written_by}\r\n                         createdAt={convertUTCDateToLocalDate(\r\n                             d.messagedata.created_at)}/>);\r\n\r\n    return <div>\r\n        {dialog}\r\n    </div>\r\n};\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport WithAuthRedirect from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getAllUsersWithDialogsThunk} from \"../../redux/messages_reducer\";\r\n\r\nlet mapStateProps = (state) => {\r\n    return {\r\n        dialogsPreview: state.messagesPage.dialogsPreview,\r\n        messagesWithUser: state.messagesPage.messagesWithUser,\r\n        authUserId: state.auth.userId\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateProps, {getAllUsersWithDialogsThunk}),\r\n    WithAuthRedirect,\r\n)(Dialogs)\r\n"],"sourceRoot":""}