{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/WithAuthRedirect.js","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Message","className","classes","dialog","message","DialogItem","active","id","name","maxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","messagesElements","messagesPage","messages","map","m","dialogsElements","dialogs","d","dialogs_items","formData","sendMessageCreator","compose"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,wBAAwB,OAAS,0B,oGCMhNC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAgBRE,IAbiB,SAACC,GAAe,IAEtCC,EAFqC,iLAInC,OAAKC,KAAKC,MAAMN,OACT,gBAACG,EAAcE,KAAKC,OADI,gBAAC,IAAD,CAAUC,GAAG,eAJT,GAEXC,aAQhC,OADiCC,YAAQX,EAARW,CAAoCL,K,uFCV1DM,EANC,SAACJ,GACb,OACI,yBAAKK,UAAWC,IAAQC,QAAxB,IAAkCP,EAAMQ,U,QCMjCC,EARI,SAACT,GAChB,OACI,yBAAKK,UAAWC,IAAQC,OAAS,IAAMD,IAAQI,QAC3C,kBAAC,IAAD,CAAST,GAAI,YAAcD,EAAMW,IAAKX,EAAMY,Q,iCCClDC,EAAcC,YAAiB,IAY/BC,EAAmBC,YAAU,CAC/BC,KAAM,WADeD,EAVL,SAAChB,GACjB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,kBAACC,EAAA,EAAD,CAAOR,KAAM,UAAWS,YAAa,UAAWC,UAAWC,IACpDC,SAAU,CAACC,IAAUZ,KAC5B,4CAgCGa,EAvBC,SAAC1B,GACb,IAMI2B,EAAmB3B,EAAM4B,aAAaC,SAASC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,aAC5EwB,EAAkBhC,EAAM4B,aAAaK,QAAQH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMD,GAAIuB,EAAEvB,QAE1F,OACI,yBAAKN,UAAWC,IAAQ2B,SACpB,yBAAK5B,UAAWC,IAAQ6B,eACnBH,GAEL,yBAAK3B,UAAWC,IAAQuB,UACpB,6BAAMF,GACN,kBAACZ,EAAD,CAAkBG,SAhBb,SAACkB,GACdpC,EAAMqC,mBAAmBD,EAAShC,e,wBCF3BkC,sBACXnC,aAjBgB,SAACV,GACjB,MAAO,CACHmC,aAAcnC,EAAMmC,gBAeD,CAACS,yBACxBzC,IAFW0C,CAGbZ","file":"static/js/4.c5255051.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Hrdg\",\"dialogs_items\":\"Dialogs_dialogs_items__36ERb\",\"dialog\":\"Dialogs_dialog__2J7TB\",\"messages\":\"Dialogs_messages__3tJ8I\",\"messeg\":\"Dialogs_messeg__3xfHR\",\"active\":\"Dialogs_active___cmpx\"};","import {Redirect} from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// HOC (хок) компонента, что-то типа декоратора в питоне, добавляет одинаковую функциональность к компонентам,\r\n// принимает компоненту, добавляет что-то и возвращает компоненту\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n};\r\n\r\nexport default WithAuthRedirect;","import React from \"react\";\r\nimport classes from './../Dialogs.module.css'\r\n// import {NavLink} from \"react-router-dom\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.dialog}> {props.message}</div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={\"Message\"} placeholder={\"Message\"} component={Textarea}\r\n                   validate={[required, maxLength50]}/>\r\n            <button>send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst DialogsReduxForm = reduxForm({\r\n    form: 'dialogs'\r\n})(DialogsForm);\r\n\r\nconst Dialogs = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.sendMessageCreator(formData.Message)\r\n\r\n\r\n    };\r\n\r\n    let messagesElements = props.messagesPage.messages.map(m => <Message message={m.message}/>);\r\n    let dialogsElements = props.messagesPage.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <DialogsReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/messages_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport WithAuthRedirect from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\n\r\n// HOC (хок) компонента, что-то типа декоратора в питоне, добавляет одинаковую функциональность к компонентам,\r\n// принимает компоненту, добавляет что-то и возвращает компоненту\r\n\r\n//это старые строки\r\n// let AuthRedirectComponent = WithAuthRedirect(Dialogs);\r\n//\r\n// const DialogsContainer = connect(mapStateProps, mapDispatchProps)(AuthRedirectComponent);\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateProps, {sendMessageCreator}),\r\n    WithAuthRedirect,\r\n)(Dialogs)\r\n"],"sourceRoot":""}